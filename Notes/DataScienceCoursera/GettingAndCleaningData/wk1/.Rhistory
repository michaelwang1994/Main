}
add2
add2(3,5)
}
add2(3,5)
}
add2 <- function(x,y) {
x+y
}
add2(1,2)
aboven <- function(x,n) {
use <- x > n
x[use]
}
aboven((5:10),7)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] = mean(y [ ,i])
}
means
}
load("~/Dropbox/Documents/Coursera/R/hw1_data.csv")
hw1_data <- read.csv("~/Dropbox/Documents/Coursera/R/hw1_data.csv")
View(hw1_data)
columnmeans(hw1_data)
columnmean(hw1_data)
mydata <- rnorm(100)
sd(mydata)
sd(x = mydata)
x
x = 1:10
if (x > 5)
x
f <- function(x) {
g <- function(y) {
y+z
}
z <- 4
x + g(x)
}
f(3)
class(4)
class(c(4, "a", TRUE))
x = c(1, 3, 5)
y = c(2, 4, 6)
rbind(x, y)
help vector
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x = [1, 2, 3, 4]
x = c(1, 2, 3, 4)
y = c(1, 2; 3, 4)
y = c(1, 2 3, 4)
y = c(1, 2)
x + y
x
y
y = c(2, 3)
x + y
x + 2
x + 1
x  = c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] = 4
x
help load
help ?
help
help.load
help.load()
help
hw1_data.csv
hw1_data <- read.csv("~/Dropbox/Documents/Coursera/R/hw1_data.csv")
View(hw1_data)
hw1_data = read.csv("~/Dropbox/Documents/Coursera/R/hw1_data.csv")
hw1_data
hw1_data[1,2]
hw1_data[1:2
]
hw1_data[r(1,2)]
hw1_data[, 1:2]
hw1_data[, 91:2)]
hw1_data[, (1:2)]
hw1_data[1:2, ]
dim(hw1_data)
dim(hw1_data, 1)
dim(hw1_data)[1]
lastrow = dim(hw1_data)[1]
hw1_data[(lastrow - 1: lastrow), ]
hw1_data[(lastrow-1:lastrow), ]
hw1_data[(lastrow-1,lastrow), ]
hw1_data[((lastrow-1),lastrow), ]
hw1_data[((lastrow-1):lastrow), ]
hw1_data
hw1_data[47,1]
sum(is.na(hw1_data))
is.na(hw1_data)
sum(is.na(hw1_data))
hw1_data_clean = hw1_data[!is.na(hw1_data)]
hw1_data_clean
complete.cases(hw1_data)
hw1_data_clean = hw1_data[complete.cases(hw1_data)]
hw1_data_clean = hw1_data[complete.cases(hw1_data), ]
hw1_data_clean
mean(hw1_data_clean[,1])
hw1_data[, 1] > 31
hw1_data[, 1] > 31 AND hw1_data[, 4] > 90
hw1_data[, 1] > 31 & hw1_data[, 4] > 90
hw1_data_ozone_temp = hw1_data[hw1_data[, 1] > 31 & hw1_data[, 4] > 90]
hw1_data_ozone_temp = hw1_data[hw1_data[, 1] > 31 & hw1_data[, 4] > 90, ]
hw1_data_ozone_temp
hw1_data_ozone_temp = hw1_data[hw1_data_clean[, 1] > 31 & hw1_data_clean[, 4] > 90, ]
hw1_data_ozone_temp
hw1_data_ozone_temp = hw1_data_clean[hw1_data_clean[, 1] > 31 & hw1_data_clean[, 4] > 90, ]
hw1_data_ozone_temp
mean(hw1_data_ozone_temp[, 2])
hw1_data_temp_month = hw1_data_clean[hw1_data_clean[, 5] == 6, ]
hw1_data_temp_month
mean(hw1_data_temp_month[, 4])
hw1_data_temp_month = hw1_data[hw1_data[, 5] == 6, ]
mean(hw1_data_temp_month[, 4])
hw1_data_ozone_month = hw1_data[hw1_data[, 5] == 5, ]
max(hw1_data_ozone_month[, 1])
hw1_data_ozone_month = hw1_data_clean[hw1_data_clean[, 5] == 5, ]
max(hw1_data_ozone_month[, 1])
q()
library(datasets)
data(iris)
?iris
iris
iris3
iris
tapply(iris, $Species, rowMeans)
tapply(iris, Species, rowMeans)
tapply(iris, iris$Species, rowMeans)
tapply(iris, 5, rowMeans)
?tapply
tapply(iris, 5, mean)
tapply(iris, iris$Species, mean)
?mean
?tapply
?apply
apply(iris, mean)
lapply(iris, mean)
split(iris, mean, TRUE)
split(iris, mean)
split(iris, mean, drop = TRUE, )
split(iris, mean, drop = TRUE)
iris
iris
apply(iris$Species == "virginica", 1, mean)
iris$Speicies == "virginica"
iris$Speicies = "virginica"
rowMeans(iris)
rowMeans(iris, [, 1:4])
rowMeans(iris[, 1])
rowMeans(iris[, 1:2])
rowMeans(iris[, 1,5])
rowMeans(iris[, 1,4])
rowMeans(iris[, 1:4])
iris[, 1]
apply(iris[, 1:4], 1, mean)
split(iris, 5)
split(iris, iris$Species
)
split(iris, iris$Species = "virginica")
iris_split = split(iris, iris$Species)
colMeans(iris_split)
apply(iris_split, 1, mean)
apply(iris_split, 1, means)
iris
iris
iris
library(datasets)
data(iris)
clear
library(datasets)
data(iris)
iris
iris_split
iris_split = split(iris, iris$Species)
iris_split
iris_split$virginica
?rowMeans
iris_split$virginica.rowMeans
iris_split$virginica.rowMeans
rowMeans(iris_split$virginica)
rowMeans(iris_split$virginica, TRUE, 1)
rowMeans(iris_split$virginica, TRUE, 2)
iris_split$virginica
rowMeans(iris_split$virginica[, 1])
rowMeans(iris_split$virginica)
rowMeans(iris_split$virginica[1:4])
rowMeans(iris_split$virginica[1:4])
colMeans(iris_split$virginica)
colMeans(iris_split$virginica[,1])
colMeans(iris_split$virginica[1:4])
colMeans(iris)
colMeans(iris[1:4])
apply(iris[, 1:4], 1, mean)
apply(iris, 1, mean)
colMeans(iris)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
mtcars
?mtcars
sapply(mtcars, cyl, mean)
apply(mtcars, 2, mean)
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
mean(split(mtcars$mpg, mtcars$cyl))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(cyl, mpg, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(hp, cyl))
with(mtcars, tapply(hp, cyl, mean))
cylinder_avg_hp = with(mtcars, tapply(hp, cyl, mean))
cylinder_avg_hp[1] - cylinder_avg_hp[3]
debug(ls)
ls
debug(ls)
debug(ls)
ls()
ls()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", method = "curl")
getwd
getwd()
setwd(/Dropbox/Documents/Coursera)
setwd("/Dropbox/Documents/Coursera")
setwd("~/Dropbox/Documents/Coursera/GettingAndCleaningData")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "ACSHousingData.csv", method = "curl")
setwd("~/Dropbox/Documents/Coursera/GettingAndCleaningData/wk1")
setwd("~/Dropbox/Documents/Coursera/GettingAndCleaningData/wk1")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf", "CodeBook.pdf", method = "curl")
acshousingdata = read.csv("ACSHousingData.csv")
head(acshousingdata)
idaha_mil = acshousingdata[, acshousingdata$ST == 16]
idaha_mil = acshousingdata[, acshousingdata$ST]
idaha_mil
idaho_mil = acshousingdata[, (acshousingdata$ST == 16)]
idaho_mil = acshousingdata[(acshousingdata$ST == 16)]
idaho_mil = acshousingdata[(acshousingdata$ST == 16), ]
idaho_mil
idaho_mil = acshousingdata[(acshousingdata$ST == 16), ][(acshousingdata$VAL == 24)]
idaho_mil = acshousingdata[(acshousingdata$ST == 16, acshousingdata$VAL == 24), ]
idaho_mil = acshousingdata[(acshousingdata$ST == 16), ]
idaho_mil = acshousingdata[(acshousingdata$ST == 16), ][(acshousingdata$VAL == 24). ]
idaho_mil = acshousingdata[(acshousingdata$ST == 16), ][(acshousingdata$VAL == 24), ]
idaho_mil
idaho_mil = complete.cases(acshousingdata[(acshousingdata$ST == 16), ][(acshousingdata$VAL == 24). ])
idaho_mil = complete.cases(acshousingdata[(acshousingdata$ST == 16), ][(acshousingdata$VAL == 24), ])
idaho_mil
idaho_mil = acshousingdata(complete.cases(acshousingdata[(acshousingdata$ST == 16), ][(acshousingdata$VAL == 24), ]))
idaho_mil = acshousingdata[complete.cases(acshousingdata[(acshousingdata$ST == 16), ][(acshousingdata$VAL == 24), ])]
idaho_mil
library(data.table)
acshousingDT = data.table(acshousingdata)
library(data)
library(data.table)
idaho_mil = acshousingdata[c(acshousingdata$ST == 16, acshousingdata$VAL == 24), ]
idaho_mil
idaho = acshousingdata[(acshousingdata$ST == 16), ]
idaho_mil = idaho[(idaho$VAL == 24), ]
idaho_mil
idaho = acshousingdata[(acshousingdata$ST == 16) | (acshousingdata$VAL == 24), ]
idaho
idaho_mil = acshousingdata[(acshousingdata$ST == 16) | (acshousingdata$VAL == 24), ]
nrows(idaho_mil)
nrow(idaho_mil)
idaho_mil = acshousingdata[(acshousingdata$ST == 16) & (acshousingdata$VAL == 24), ]
nrow(idaho_mil)
idaho_mil
idaho_mil[complete.cases(idaho_mil$ST)]
idaho_mil[complete.cases(idaho_mil$ST), ]
nrow(idaho_mil[complete.cases(idaho_mil$ST), ])
nrow(idaho_mil[complete.cases(idaho_mil$VAL), ])
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "natgasaquisition.xlsx", method = "curl")
read.xlsx("natgasaquisition.xlsx")
?library
libary(read.xlsx)
libary(read)
library(read.xlsx)
head(library)
library(xlsx)
library('xlsx)
library('xlsx')
library('xlsx')
require(xlsx)
install.packages("xlsxx")
install.packages("xlsx")
install.packages("data.table)
:
L
""
'
install.packages("data.table")
library(xlsx)
library(data.table)
install.packages("rJava")
install.packages("rJava")
install.packages("xlsxjars")
library(xlsx)
library(rJava)
library(xlsxjars)
library(xlsx)
library(xlsxjars)
install.packages("xlsx")
library(xlsxjars)
library(xlsx)
install.packages('rJava', .libPaths()[1], 'http://www.rforge.net/')
install.packages("rJava", .libPaths()[1], "http://www.rforge.net/")
library(xlsx)
gdata::read.xls
gdata::read.xls()
install.packages("rJava", .libPaths()[1], "http://www.rforge.net/")
install.packages("rJava", .libPaths()[1], "http://www.rforge.net/")
install.packages("rJava", "http://www.rforge.net/")
install.packages("rJava", "http://www.rforge.net/")
library(xlsx)
install.packages("rJava", "http://www.rforge.net/")
install.packages("rJava", "http://www.rforge.net/")
install.packages("rJava", "http://www.rforge.net/")
library(xlsxjars)
install.packages(xlsxjars)
install.packages("xlsxjars")
install.packages("xlsxjars")
library(xlsx)
natgasaquisition = read.table("natgasaquisition.xlsx")
natgasaquisition
natgasaquisition = read.csv("natgasaquisition.csv")
natgasaquisition
StateAbbrev	CName	Address1	Address2	Address3	City	Zip	CuCurrent	PaCurrent	PoCurrent	Contact	Ext	Fax	email	Status
OK	Tiger Natural Gas	1422 E 71st  Suite J			Tulsa	74136	0	1	0	918-491-6998	0	918-491-6659		1
GA	PS Energy	2987 Clairmont Rd	Suite 500		Atlanta	30329	1	0	0	404-321-5711				1
OK	Geary Energy	7712 S Yale Ave	Suite 201		Tulsa	74136	1	0	0	918-523-2516	0	918-523-2522		1
CO	Utility Resource Solutions	1700 Lincoln St.	Suite 2530		Denver	80203	0	1	0	303-864-1919	0			1
CO	Select Natural Gas LLC	8122 Southpark Lane	Suite 204		Littleton	80120	1	0	0	345-098-8890	456			1
StateAbbrev	CName	Address1	Address2	Address3	City	Zip	CuCurrent	PaCurrent	PoCurrent	Contact	Ext	Fax	email	Status
OK	Tiger Natural Gas	1422 E 71st  Suite J			Tulsa	74136	0	1	0	918-491-6998	0	918-491-6659		1
GA	PS Energy	2987 Clairmont Rd	Suite 500		Atlanta	30329	1	0	0	404-321-5711				1
OK	Geary Energy	7712 S Yale Ave	Suite 201		Tulsa	74136	1	0	0	918-523-2516	0	918-523-2522		1
CO	Utility Resource Solutions	1700 Lincoln St.	Suite 2530		Denver	80203	0	1	0	303-864-1919	0			1
CO	Select Natural Gas LLC	8122 Southpark Lane	Suite 204		Littleton	80120	1	0	0	345-098-8890	456			1
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", "baltimoreRestaurant.xml", method = "curl")
download.packages("xml")
install.packages("xml")
install.packages("X<:")
download.packages("XML")
install.packages("XML")
library(XML)
read.XML("baltimoreRestaurant.xml")
doc = xmlTreeParse("baltimoreRestaurant.xml", useInternal = TRUE)
doc
rootNote = xmlRoot(doc)
rootNote
xmlName(rootNode)
rootNode = xmlRoot(doc)
xmlName(rootNode)
xmlName(doc)
xml[[1]]
doc[[1]]
doc
dco
xmlSApply(rootNode, xmlValue)
xmlSApply(rootNode, "//zip", xmlValue)
xmlSApply(rootNode, "//zipcode", xmlValue)
xpathSApply(rootNode, "//zipcode", xmlValue)
xpathSApply(rootNode, "//zipcode")
xpathSApply(rootNode, "//zipcode", xmlValue)
xpathSApply(rootNode, "//zipcode" = 21231, xmlValue)
xpathSApply(rootNode, "//zipcode = 21231", xmlValue)
doc
xmlSApply(doc, xmlValue)
head(doc)
xmlSApply(doc, xmlValue)
xmlSApply(rootNode, xmlValue)
xmlSApply(rootNode, "//zipcode", xmlValue)
?xmlSApply
xmlApply(rootNode, "//zipcode")
xmlApply(rootNode, xmlValue)
xmlSApply(doc[[2]], xmlNames)
xmlSApply(doc[[2]], xmlName)
xmlSApply(rootNode[[2]], xmlName)
xpathSApply(rootNode, "//zipcode", xmlValue)
zipcodes = xpathSApply(rootNode, "//zipcode", xmlValue)
zipcodes[zipcodes == "21231"]
nrows(zipcodes[zipcodes == "21231"])
size(zipcodes[zipcodes == "21231"])
dim(zipcodes[zipcodes == "21231"])
ncol(zipcodes[zipcodes == "21231"])
length(zipcodes[zipcodes == "21231"])
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "ACSHousingData2.csv", "curl")
library(data.table)
fread("ACSHousingData2.csv")
DT = fread("ACSHousingData2.csv")
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15),mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15),mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15),mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15),mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15),)
system.time((mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)))
system.time((mean(DT[DT$SEX==1,]$pwgtp15), mean(DT[DT$SEX==2,]$pwgtp15)))
system.time((mean(DT[DT$SEX==1,]$pwgtp15), mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15),mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1], rowMeans(DT)[DT$SEX==2])
